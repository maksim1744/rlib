var searchIndex = new Map(JSON.parse('[["rlib_bitset",{"t":"ECCFNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Bitset","bits_iter","bitset","BitsIter","borrow","borrow_mut","from","into","into_iter","new","next","try_from","try_into","type_id","Bitset","bitand","bitand_assign","bitor","bitor_assign","bitxor","bitxor_assign","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","count","default","eq","flip","fmt","","from","from_u64","into","iter_bits","new","not","remove","set","test","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"rlib_bitset"],[3,"rlib_bitset::bits_iter"],[14,"rlib_bitset::bitset"],[47,"core::option"],[48,"core::result"],[49,"core::any"],[50,"core::fmt"],[51,"alloc::string"]],"i":"````j000000000`Ab0000000000000000000000000000000","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}0{{{b{{h{f}}}}}j}{{{b{dj}}}{{l{c}}}{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}`{{{b{Ab}}{b{Ab}}}c{}}{{{b{dAb}}{b{Ab}}}Ad}1010:9{{{b{dAb}}}Ad}{{{b{Ab}}}Ab}{{b{b{dc}}}Ad{}}{bAd}{{{b{Ab}}}Af}{{}Ab}{{{b{Ab}}{b{Ab}}}Ah}{{{b{dAb}}Af}Ad}{{{b{Ab}}{b{dAj}}}Al}0{cc{}}{fAb}{{}c{}}{{{b{Ab}}}j}7{Abc{}}66{{{b{Ab}}Af}Ah}{bc{}}{bAn}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}","D":"h","p":[[1,"reference"],[0,"mut"],[1,"u64"],[1,"array"],[5,"BitsIter",3],[6,"Option",47],[6,"Result",48],[5,"TypeId",49],[5,"Bitset",14],[1,"unit"],[1,"usize"],[1,"bool"],[5,"Formatter",50],[8,"Result",50],[5,"String",51]],"r":[[0,14]],"b":[[31,"impl-Display-for-Bitset%3CN%3E"],[32,"impl-Debug-for-Bitset%3CN%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACsABAAAAAYACQAYACMAAAAlAAoA"}],["rlib_dsu",{"t":"FNNNNNNNNNNNNNNNNNN","n":["DSU","borrow","borrow_mut","check","clone","clone_into","clone_to_uninit","fmt","from","into","new","par","reset","size","to_owned","try_from","try_into","type_id","un"],"q":[[0,"rlib_dsu"],[19,"core::fmt"],[20,"core::result"],[21,"core::any"]],"i":"`f00000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{df}}hh}j}{{{b{f}}}f}{{b{b{dc}}}l{}}{bl}{{{b{f}}{b{dn}}}A`}{cc{}}{{}c{}}{hf}{{{b{df}}h}h}{{{b{df}}h}l}1{bc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAd}=","D":"d","p":[[1,"reference"],[0,"mut"],[5,"DSU",0],[1,"usize"],[1,"bool"],[1,"unit"],[5,"Formatter",19],[8,"Result",19],[6,"Result",20],[5,"TypeId",21]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABEAAgAAAAgACwAIAA=="}],["rlib_f80",{"t":"NNNNNNNNNNNNFHNNNNNNNNNNNNNNNNNNNNNNN","n":["abs","add","add_assign","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","div","div_assign","eq","f80","f80_init","fmt","","from","","ge","gt","into","le","lt","max","min","mul","mul_assign","neg","partial_cmp","show","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"rlib_f80"],[37,"core::fmt"],[38,"core::cmp"],[39,"core::option"],[40,"rlib_show::traits"],[41,"alloc::string"],[42,"core::result"],[43,"core::any"]],"i":"b00000000000``00000000000000000000000","f":"{bb}{{bb}c{}}{{{f{db}}b}h}{f{{f{c}}}{}}{{{f{d}}}{{f{dc}}}{}}{{{f{b}}}b}{{f{f{dc}}}h{}}{fh}{{}b}76{{{f{b}}{f{b}}}j}`{{}h}{{{f{b}}{f{dl}}}n}0{A`b}{cc{}}44{{}c{}}55{{bb}b}0>={bc{}}{{{f{b}}{f{b}}}{{Ad{Ab}}}}{{{f{b}}{f{Af}}}Ah}{{bb}c{}}{{{f{db}}b}h}{fc{}}{fAh}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{fAl}","D":"d","p":[[5,"f80",0],[0,"mut"],[1,"reference"],[1,"unit"],[1,"bool"],[5,"Formatter",37],[8,"Result",37],[1,"f64"],[6,"Ordering",38],[6,"Option",39],[5,"ShowSettings",40],[5,"String",41],[6,"Result",42],[5,"TypeId",43]],"r":[],"b":[[14,"impl-Debug-for-f80"],[15,"impl-Display-for-f80"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMAAwAAABEAEwABABYADwA="}],["rlib_fft",{"t":"FFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNCNNNNNNNNNNNOOSSS","n":["Complex","FFT","I","abs","abs2","add","add_assign","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","conj","default","","div","","div_assign","","eq","fft","fft_into","fft_inv","fft_inv_into","fmt","from","","into","","mul","","mul_assign","","multiply","multiply_into","multiply_verify","neg","new","","new_real","precision","sub","sub_assign","to_owned","","try_from","","try_into","","type_id","","update_n","x","y","CORRECT_F32_BOUNDS","CORRECT_F64_BOUNDS","VALS_TO_CHECK"],"q":[[0,"rlib_fft"],[59,"rlib_fft::precision"],[62,"rlib_fft::complex"],[63,"rlib_num_traits"],[64,"core::clone"],[65,"rlib_fft::fft"],[66,"core::default"],[67,"core::cmp"],[68,"alloc::vec"],[69,"core::fmt"],[70,"core::result"],[71,"core::any"]],"i":"``b00000n1010101011011111000011010111100`1101`1110101010011```","f":"```{{{d{{b{c}}}}}cf}0{{{b{c}}{b{c}}}{{b{c}}}f}{{{d{h{b{c}}}}{b{c}}}jf}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{{b{c}}}}}{{b{c}}}{lf}}{{{d{{n{c}}}}}{{n{c}}}{lf}}{{d{d{hc}}}j{}}0{dj}0{{{d{{b{c}}}}}{{b{c}}}f}{{}{{b{c}}}{A`f}}{{}{{n{c}}}f}:{{{b{c}}c}{{b{c}}}f}:{{{d{h{b{c}}}}c}jf}{{{d{{b{c}}}}{d{{b{c}}}}}Ab{Adf}}{{{d{h{n{c}}}}{d{{Ah{Af}}}}Aj}{{Al{{b{c}}}}}f}{{{d{h{n{c}}}}{d{{Ah{Af}}}}Aj{d{h{Ah{{b{c}}}}}}}jf}{{{d{h{n{c}}}}{d{{Ah{{b{c}}}}}}}{{Al{An}}}f}{{{d{h{n{c}}}}{d{{Ah{{b{c}}}}}}{d{h{Ah{An}}}}}jf}{{{d{{b{c}}}}{d{hB`}}}Bb{Bdf}}{cc{}}0{{}c{}}09{{{b{c}}{b{c}}}{{b{c}}}f}9{{{d{h{b{c}}}}{b{c}}}jf}{{{d{h{n{c}}}}{d{{Ah{Af}}}}{d{{Ah{Af}}}}}{{Al{An}}}f}{{{d{h{n{c}}}}{d{{Ah{Af}}}}{d{{Ah{Af}}}}{d{h{Ah{An}}}}}jf}{{{d{{Ah{Af}}}}{d{{Ah{Af}}}}{d{{Ah{An}}}}}Ab}{{{b{c}}}{{b{c}}}f}{{cc}{{b{c}}}f}{{}{{n{c}}}f}{c{{b{c}}}f}`87{dc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{dBh}0{{{d{h{n{c}}}}Aj}jf}`````","D":"l","p":[[5,"Complex",0,62],[1,"reference"],[10,"Float",63],[0,"mut"],[1,"unit"],[10,"Clone",64],[5,"FFT",0,65],[10,"Default",66],[1,"bool"],[10,"PartialEq",67],[1,"i32"],[1,"slice"],[1,"usize"],[5,"Vec",68],[1,"i64"],[5,"Formatter",69],[8,"Result",69],[10,"Debug",69],[6,"Result",70],[5,"TypeId",71]],"r":[[0,62],[1,65],[40,65]],"b":[[20,"impl-Div-for-Complex%3CF%3E"],[21,"impl-Div%3CF%3E-for-Complex%3CF%3E"],[22,"impl-DivAssign-for-Complex%3CF%3E"],[23,"impl-DivAssign%3CF%3E-for-Complex%3CF%3E"],[34,"impl-Mul%3CF%3E-for-Complex%3CF%3E"],[35,"impl-Mul-for-Complex%3CF%3E"],[36,"impl-MulAssign%3CF%3E-for-Complex%3CF%3E"],[37,"impl-MulAssign-for-Complex%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADgABAAAAB4AIwAFACoAEgA+AAAA"}],["rlib_gcd",{"t":"HHHH","n":["crt","egcd","gcd","lcm"],"q":[[0,"rlib_gcd"],[4,"core::option"],[5,"rlib_num_traits"]],"i":"````","f":"{{cccc}{{b{c}}}{}}{{ccc}{{b{{d{cc}}}}}f}{{cc}cf}0","D":"`","p":[[6,"Option",4],[1,"tuple"],[10,"Integer",5]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAAAAQACAAMABAA="}],["rlib_geometry",{"t":"CCCCPFPPGNNNNONNNNNNNNNNNNNNNNONNNNNNNNNFOONNNONNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOGGSPPPPPPPPNNNNNNNHNNNHHHNNNNHNNNNNNN","n":["circle","line","point","util","Border","Circle","Inside","Outside","PointPosition","borrow","","borrow_mut","","c","clone","","clone_into","","clone_to_uninit","","default","eq","fmt","","from","","into","","new","position","r","show","to_owned","","try_from","","try_into","","type_id","","Line","a","b","between","borrow","borrow_mut","c","clone","clone_into","clone_to_uninit","contains","default","dist","fmt","from","into","new","ort","show","to_owned","try_from","try_into","type_id","Point","add","","","","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cp","default","div","dp","eq","fmt","from","into","len","mul","new","show","slen","sub","","","","to_owned","try_from","try_into","type_id","x","y","CircleIntersection","CircleLineIntersection","EPS","Intersect","","None","","Same","Touch","TouchInside","TouchOutside","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","dist","fmt","from","","intersect_cc","intersect_cl","intersect_ll","into","","into_iter","","parallel","to_owned","try_from","","try_into","","type_id",""],"q":[[0,"rlib_geometry"],[4,"rlib_geometry::circle"],[40,"rlib_geometry::line"],[63,"rlib_geometry::point"],[96,"rlib_geometry::util"],[133,"core::fmt"],[134,"rlib_show::traits"],[135,"alloc::string"],[136,"core::result"],[137,"core::any"],[138,"core::option"]],"i":"````h`00`f101001010101010101000001010101`An000000000000000000000`Ab0000000000000000000000000000000```BbB`1001001010000`010```1010`0101010","f":"`````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0`{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{bj}0{{}f}{{{b{h}}{b{h}}}l}{{{b{f}}{b{dn}}}A`}{{{b{h}}{b{dn}}}A`}{cc{}}0{{}c{}}0{{AbAd}f}{{{b{f}}{b{Ab}}}h}`{{{b{f}}{b{Af}}}Ah}{bc{}}0{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0```{{{b{Ab}}{b{Ab}}}An}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}`{{{b{An}}}An}{{b{b{dc}}}j{}}{bj}{{{b{An}}{b{Ab}}}l}{{}An}{{{b{An}}{b{Ab}}}Ad}{{{b{An}}{b{dn}}}A`}{cc{}}{{}c{}}{{AdAdAd}An}{{{b{An}}}Ab}{{{b{An}}{b{Af}}}Ah}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}`{{{b{Ab}}{b{Ab}}}c{}}{{AbAb}c{}}{{Ab{b{Ab}}}c{}}{{{b{Ab}}Ab}c{}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ab}}}Ab}{{b{b{dc}}}j{}}{bj}{{{b{Ab}}{b{Ab}}}Ad}{{}Ab}{{AbAd}c{}}2{{{b{Ab}}{b{Ab}}}l}{{{b{Ab}}{b{dn}}}A`}{cc{}}{{}c{}}{{{b{Ab}}}Ad}5{{AdAd}Ab}{{{b{Ab}}{b{Af}}}Ah}2{{AbAb}c{}}{{{b{Ab}}Ab}c{}}{{{b{Ab}}{b{Ab}}}c{}}{{Ab{b{Ab}}}c{}}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}`````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{B`}}}B`}{{b{b{dc}}}j{}}{bj}{{{b{Ab}}{b{Ab}}}Ad}{{{b{B`}}{b{dn}}}A`}{cc{}}0{{{b{f}}{b{f}}}B`}{{{b{f}}{b{An}}}Bb}{{{b{An}}{b{An}}}{{Bd{Ab}}}}{{}c{}}0{Bbc{}}{B`c{}}{{{b{An}}{b{An}}}l}{bc{}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0","D":"Ah","p":[[1,"reference"],[0,"mut"],[5,"Circle",4],[6,"PointPosition",4],[1,"unit"],[1,"bool"],[5,"Formatter",133],[8,"Result",133],[5,"Point",63],[1,"f64"],[5,"ShowSettings",134],[5,"String",135],[6,"Result",136],[5,"TypeId",137],[5,"Line",40],[6,"CircleIntersection",96],[6,"CircleLineIntersection",96],[6,"Option",138]],"r":[],"b":[[64,"impl-Add-for-%26Point"],[65,"impl-Add-for-Point"],[66,"impl-Add%3C%26Point%3E-for-Point"],[67,"impl-Add%3CPoint%3E-for-%26Point"],[86,"impl-Sub-for-Point"],[87,"impl-Sub%3CPoint%3E-for-%26Point"],[88,"impl-Sub-for-%26Point"],[89,"impl-Sub%3C%26Point%3E-for-Point"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHkABgAAABgAHQAZADkAFgBSACIAdwACAHwACQA="}],["rlib_io",{"t":"EEEEQEQQCCCQKFNNNNNNMNNNNNNNKFNNNNNNNNNNMNN","n":["Readable","Reader","Writable","Writer","make_io","make_output_macro","make_output_macro_","out_impl","output_macro","reader","writer","make_output_macro","Readable","Reader","borrow","borrow_mut","from","into","is_eof","new","read","","read_line","read_lines","read_vec","try_from","try_into","type_id","Writable","Writer","borrow","borrow_mut","drop","flush","from","into","new","try_from","try_into","type_id","write","","write_char"],"q":[[0,"rlib_io"],[11,"rlib_io::output_macro"],[12,"rlib_io::reader"],[28,"rlib_io::writer"],[43,"std::io"],[44,"alloc::boxed"],[45,"alloc::string"],[46,"core::option"],[47,"alloc::vec"],[48,"core::result"],[49,"core::any"]],"i":"``````````````f00000n1111111``Al000000000Bb11","f":"``````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{{b{df}}}h}{{{l{j}}}f}{{{b{df}}}n}{{{b{df}}}cn}{{{b{df}}}{{Ab{A`}}}}{{{b{df}}}{{Ad{A`}}}}{{{b{df}}Af}{{Ad{c}}}n}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}``=<{{{b{dAl}}}An}0<;{{{l{B`}}}Al}432{{{b{Bb}}{b{dAl}}}An}{{{b{dAl}}{b{c}}}AnBb}{{{b{dAl}}Bd}An}","D":"h","p":[[1,"reference"],[0,"mut"],[5,"Reader",12],[1,"bool"],[10,"Read",43],[5,"Box",44],[10,"Readable",12],[5,"String",45],[6,"Option",46],[5,"Vec",47],[1,"usize"],[6,"Result",48],[5,"TypeId",49],[5,"Writer",28],[1,"unit"],[10,"Write",43],[10,"Writable",28],[1,"char"]],"r":[[0,12],[1,12],[2,28],[3,28]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACcAAwAAABAAEwAPACUABgA="}],["rlib_iter",{"t":"HHHHHHH","n":["iter_neighbours_4","iter_neighbours_4d","iter_neighbours_8","iter_permutations","iter_submasks","iter_supermasks","next_permutation"],"q":[[0,"rlib_iter"],[7,"core::iter::traits::iterator"],[8,"alloc::vec"],[9,"core::cmp"],[10,"core::clone"],[11,"rlib_iter::neighbours"],[12,"rlib_iter::permutations"],[13,"rlib_iter::masks"]],"i":"```````","f":"{{bbbb}{{`{{h{}{{d{{f{bb}}}}}}}}}}00{{{j{c}}}{{`{{h{}{{d{{j{c}}}}}}}}}{ln}}{c{{`{{h{}{{d{c}}}}}}}`}0{{{Ad{A`{Ab{c}}}}}Afl}","D":"`","p":[[1,"usize"],[17,"Item"],[1,"tuple"],[10,"Iterator",7],[5,"Vec",8],[10,"Ord",9],[10,"Clone",10],[0,"mut"],[1,"slice"],[1,"reference"],[1,"bool"]],"r":[[0,11],[1,11],[2,11],[3,12],[4,13],[5,13],[6,12]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAcAAQAAAAcA"}],["rlib_lambda",{"t":"QQQQ","n":["_rec_lambda_0_","_rec_lambda_1_","_rec_lambda_2_","rec_lambda"],"q":[[0,"rlib_lambda"]],"i":"````","f":"````","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAMAEAAAAAEAAgADAAQA"}],["rlib_mint",{"t":"IIFTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Mint107","Mint998","Modular","ONE","ZERO","add","add_assign","borrow","borrow_mut","clone","clone_into","clone_to_uninit","div","div_assign","eq","fmt","","from","inner","into","inv","md","mul","mul_assign","neg","new","pow","read","show","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id","write"],"q":[[0,"rlib_mint"],[37,"core::fmt"],[38,"rlib_io::reader"],[39,"rlib_show::traits"],[40,"alloc::string"],[41,"core::result"],[42,"core::any"],[43,"rlib_io::writer"]],"i":"```b000000000000000000000000000000000","f":"`````{{bb}b}{{{f{db}}b}h}{f{{f{c}}}{}}{{{f{d}}}{{f{dc}}}{}}{{{f{b}}}b}{{f{f{dc}}}h{}}{fh}65{{{f{b}}{f{b}}}j}{{{f{b}}{f{dl}}}n}0{cc{}}{{{f{b}}}A`}{{}c{}}7{{}A`}<;{bb}{Abb}{{{f{b}}Ad}b}{{{f{dAf}}}b}{{{f{b}}{f{Ah}}}Aj}{{bb}b}{{{f{db}}b}h}{fc{}}{fAj}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}{{{f{b}}{f{dB`}}}h}","D":"d","p":[[5,"Modular",0],[0,"mut"],[1,"reference"],[1,"unit"],[1,"bool"],[5,"Formatter",37],[8,"Result",37],[1,"u32"],[1,"i64"],[1,"u64"],[5,"Reader",38],[5,"ShowSettings",39],[5,"String",40],[6,"Result",41],[5,"TypeId",42],[5,"Writer",43]],"r":[],"b":[[15,"impl-Display-for-Modular%3CM%3E"],[16,"impl-Debug-for-Modular%3CM%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMAAwAAABEAEwAAABUAEAA="}],["rlib_num_traits",{"t":"TKKKTTKTTRRTKMMMMMMMMMMM","n":["BASE_10_LEN","FixedSizeInteger","Float","Integer","MAX","MIN","MinMax","ONE","PI","Signed","Unsigned","ZERO","ZeroOne","abs","","cos","from_i32","from_usize","into_abs","round","sin","sqrt","to_i64","unsigned_abs"],"q":[[0,"rlib_num_traits"]],"i":"Ab```Ad0`Aff331`b1111011114","f":"`````````````{{{d{b}}}b}{{{d{f}}}f}0{hf}{jf}{bb}333{{{d{f}}}l}{{{Ab{}{{n{c}}{A`{e}}}}}cbb}","D":"`","p":[[10,"Integer",0],[1,"reference"],[10,"Float",0],[1,"i32"],[1,"usize"],[1,"i64"],[17,"Unsigned"],[17,"Signed"],[10,"FixedSizeInteger",0],[10,"MinMax",0],[10,"ZeroOne",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgAAQAAABgA"}],["rlib_rand",{"t":"KICMCNNFNNNNNNNNNNNNNNNKM","n":["Rand","Rng","lcg","next","randomable","shuffle","","LinearCongruentialGenerator64","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","from_seed","from_time","into","next","next_raw","to_owned","try_from","try_into","type_id","Randomable","gen_from_u64"],"q":[[0,"rlib_rand"],[7,"rlib_rand::lcg"],[23,"rlib_rand::randomable"],[25,"rlib_rand::mrand"],[26,"core::result"],[27,"core::any"],[28,"core::marker"]],"i":"```d`00`n00000000000000`h","f":"```{{{f{bd}}e}c{}{{h{c}}}}`{{{f{bd}}{f{b{j{c}}}}}l{}}0`{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{n}}}n}{{f{f{bc}}}l{}}{fl}{cc{}}{A`n}{{}n}{{}c{}}{{{f{bn}}e}c{}{{h{c}}}}{{{f{bn}}}A`}{fc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{fAd}`{{hA`}cAf}","D":"d","p":[[0,"mut"],[10,"Rand",0,25],[1,"reference"],[10,"Randomable",23],[1,"slice"],[1,"unit"],[5,"LinearCongruentialGenerator64",7],[1,"u64"],[6,"Result",26],[5,"TypeId",27],[10,"Sized",28]],"r":[[0,25]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABcAAwAAAA0ADwABABIABwA="}],["rlib_rational",{"t":"FKONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Rational","SignedInteger","a","add","","add_assign","","b","borrow","borrow_mut","ceil","clone","clone_into","clone_to_uninit","cmp","div","","div_assign","","eq","floor","fmt","","from","hash","into","mul","","mul_assign","","neg","new","new_int","partial_cmp","show","sub","","sub_assign","","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"rlib_rational"],[44,"core::marker"],[45,"core::clone"],[46,"core::cmp"],[47,"core::fmt"],[48,"core::hash"],[49,"core::option"],[50,"rlib_show::traits"],[51,"alloc::string"],[52,"core::result"],[53,"core::any"]],"i":"``b00000000000000000000000000000000000000000","f":"```{{{b{c}}{d{{b{c}}}}}{{b{c}}}f}{{{b{c}}{b{c}}}{{b{c}}}{fh}}{{{d{j{b{c}}}}{b{c}}}l{fh}}{{{d{j{b{c}}}}{d{{b{c}}}}}lf}`{d{{d{c}}}{}}{{{d{j}}}{{d{jc}}}{}}{{{d{{b{c}}}}}{{b{c}}}f}{{{d{{b{c}}}}}{{b{c}}}n}{{d{d{jc}}}l{}}{dl}{{{d{{b{c}}}}{d{{b{c}}}}}A`f}9:87{{{d{{b{c}}}}{d{{b{c}}}}}AbAd}5{{{d{{b{c}}}}{d{jAf}}}Ah{fAj}}{{{d{{b{c}}}}{d{jAf}}}Ah{fAl}}{cc{}}{{{d{{b{c}}}}{d{je}}}lAnB`}{{}c{}}?{{{b{c}}{d{{b{c}}}}}{{b{c}}}f}?>{{{b{c}}}{{b{c}}}f}{{cc}{{b{c}}}f}{c{{b{c}}}f}{{{d{{b{c}}}}{d{{b{c}}}}}{{Bb{A`}}}f}{{{d{{b{c}}}}{d{Bd}}}BfBh}{{{b{c}}{b{c}}}{{b{c}}}{fh}}6{{{d{j{b{c}}}}{d{{b{c}}}}}lf}{{{d{j{b{c}}}}{b{c}}}l{fh}}{dc{}}{dBf}{c{{Bj{e}}}{}{}}{{}{{Bj{c}}}{}}{dBl}","D":"d","p":[[5,"Rational",0],[1,"reference"],[10,"SignedInteger",0],[10,"Copy",44],[0,"mut"],[1,"unit"],[10,"Clone",45],[6,"Ordering",46],[1,"bool"],[10,"PartialEq",46],[5,"Formatter",47],[8,"Result",47],[10,"Debug",47],[10,"Display",47],[10,"Hash",48],[10,"Hasher",48],[6,"Option",49],[5,"ShowSettings",50],[5,"String",51],[10,"Show",50],[6,"Result",52],[5,"TypeId",53]],"r":[],"b":[[3,"impl-Add%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[4,"impl-Add-for-Rational%3CT%3E"],[5,"impl-AddAssign-for-Rational%3CT%3E"],[6,"impl-AddAssign%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[15,"impl-Div-for-Rational%3CT%3E"],[16,"impl-Div%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[17,"impl-DivAssign-for-Rational%3CT%3E"],[18,"impl-DivAssign%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[21,"impl-Debug-for-Rational%3CT%3E"],[22,"impl-Display-for-Rational%3CT%3E"],[26,"impl-Mul-for-Rational%3CT%3E"],[27,"impl-Mul%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[28,"impl-MulAssign-for-Rational%3CT%3E"],[29,"impl-MulAssign%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[35,"impl-Sub-for-Rational%3CT%3E"],[36,"impl-Sub%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[37,"impl-SubAssign%3C%26Rational%3CT%3E%3E-for-Rational%3CT%3E"],[38,"impl-SubAssign-for-Rational%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACoAAwAAABcAGQAAABsAEQA="}],["rlib_segtree",{"t":"EECCFKNNNNNNNNNNMNNNNNNNNNNFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOO","n":["Segtree","SegtreeItem","segtree","segtree_items","Segtree","SegtreeItem","ask","borrow","borrow_mut","debug","from","from_iter","from_slice","into","lower_bound","lower_bound_rev","merge","modify","","new","new_raw","push","set","try_from","try_into","type_id","update","Combinator","Max","MaxAdd","Min","MinAdd","Sum","SumAdd","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","default","","","","","","","fmt","","","","","","","from","","","","","","","","","","","","","","","","","into","","","","","","","len","md","","","merge","","","","","","","modify","","","","new","","","","","","push","","","","to_owned","","","","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","v","","","","",""],"q":[[0,"rlib_segtree"],[4,"rlib_segtree::segtree"],[27,"rlib_segtree::segtree_items"],[166,"core::clone"],[167,"alloc::string"],[168,"core::fmt"],[169,"core::default"],[170,"core::iter::traits::iterator"],[171,"core::iter::traits::exact_size"],[172,"core::option"],[173,"core::ops::function"],[174,"core::result"],[175,"core::any"],[176,"core::cmp"],[177,"core::ops::arith"],[178,"rlib_num_traits"],[179,"core::marker"],[180,"core::convert"]],"i":"``````d000000000j0111011110```````BjBnC`CdChCjCn65432106543210654321065432106543210654321066655544332211000654321013216543210321065432132106543210654321065432106543210654321","f":"``````{{{f{b{d{ec}}}}hh}e{}{{j{c}}l}}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{b{d{ec}}}}}nA`{A`l{j{c}}}}{cc{}}{g{{d{ec}}}{}{Ab{j{c}}l}{{Af{}{{Ad{e}}}}Ah}}{{{f{{Aj{e}}}}}{{d{ec}}}{}{{j{c}}l}}{{}c{}}{{{f{b{d{ec}}}}hg}{{Al{h}}}{}{{j{c}}lAb}{{Bb{{f{e}}}{{An{B`}}}}}}0{{{f{j}}{f{j}}}j}{{{f{bj}}{f{c}}}Bd{}}{{{f{b{d{ec}}}}hh{f{c}}}Bd{}{{j{c}}l}}{{he}{{d{ec}}}{}{{j{c}}l}}0{{{f{bj}}{f{bj}}{f{bj}}}Bd}{{{f{b{d{ec}}}}he}Bd{}{{j{c}}l}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{fBh}{{{f{bj}}{f{j}}{f{j}}}Bd}```````{f{{f{c}}}{}}000000{{{f{b}}}{{f{bc}}}{}}000000{{{f{{Bj{c}}}}}{{Bj{c}}}{lBll}}{{{f{{Bn{c}}}}}{{Bn{c}}}{lBll}}{{{f{{C`{c}}}}}{{C`{c}}}{l{Cb{}{{An{}}}}l}}{{{f{{Cd{c}}}}}{{Cd{c}}}{lBlCfAbl}}{{{f{{Ch{c}}}}}{{Ch{c}}}{lBlCfAbl}}{{{f{{Cj{c}}}}}{{Cj{c}}}{l{Cb{}{{An{}}}}{Cl{}{{An{}}}}Abl}}{{{f{{Cn{ce}}}}}{{Cn{ce}}}ll}{{f{f{bc}}}Bd{}}000000{fBd}000000{{}{{Bj{c}}}{BllD`}}{{}{{Bn{c}}}{BllD`}}{{}{{C`{c}}}{{Cb{}{{An{}}}}lAb}}{{}{{Cd{c}}}{BlCfAblD`}}{{}{{Ch{c}}}{BlCfAblD`}}{{}{{Cj{c}}}{{Cb{}{{An{}}}}{Cl{}{{An{}}}}Abl}}{{}{{Cn{ce}}}AbAb}{{{f{{Bj{c}}}}{f{bDb}}}Dd{A`Bll}}{{{f{{Bn{c}}}}{f{bDb}}}Dd{A`Bll}}{{{f{{C`{c}}}}{f{bDb}}}Dd{A`{Cb{}{{An{}}}}l}}{{{f{{Cd{c}}}}{f{bDb}}}Dd{A`BlCfAbl}}{{{f{{Ch{c}}}}{f{bDb}}}Dd{A`BlCfAbl}}{{{f{{Cj{c}}}}{f{bDb}}}Dd{A`{Cb{}{{An{}}}}{Cl{}{{An{}}}}Abl}}{{{f{{Cn{ce}}}}{f{bDb}}}DdA`A`}{Dfc{}}{c{{Bj{c}}}{Bll}}{cc{}}02{c{{Bn{c}}}{Bll}}{c{{C`{c}}}{}}2{c{{Cd{c}}}{BlCfAbl}}3{c{{Ch{c}}}{BlCfAbl}}4{c{{Cj{c}}}{}}5{c{{Cn{eg}}}Dh{{Dj{c}}}{{Dj{c}}}}86{{}c{}}000000````{{{f{{Bj{c}}}}{f{{Bj{c}}}}}{{Bj{c}}}{Bll}}{{{f{{Bn{c}}}}{f{{Bn{c}}}}}{{Bn{c}}}{Bll}}{{{f{{C`{c}}}}{f{{C`{c}}}}}{{C`{c}}}{{Cb{}{{An{}}}}l}}{{{f{{Cd{c}}}}{f{{Cd{c}}}}}{{Cd{c}}}{BlCfAbl}}{{{f{{Ch{c}}}}{f{{Ch{c}}}}}{{Ch{c}}}{BlCfAbl}}{{{f{{Cj{c}}}}{f{{Cj{c}}}}}{{Cj{c}}}{{Cb{}{{An{}}}}{Cl{}{{An{}}}}Abl}}{{{f{{Cn{eg}}}}{f{{Cn{eg}}}}}{{Cn{eg}}}{}{{j{c}}}{{j{c}}}}{{{f{b{Cd{c}}}}{f{c}}}Bd{BlCfAbl}}{{{f{b{Ch{c}}}}{f{c}}}Bd{BlCfAbl}}{{{f{b{Cj{c}}}}{f{c}}}Bd{{Cb{}{{An{}}}}{Cl{}{{An{}}}}Abl}}{{{f{b{Cn{eg}}}}{f{c}}}Bd{}{{j{c}}}{{j{c}}}}{c{{Bj{c}}}{Bll}}{c{{Bn{c}}}{Bll}}{c{{C`{c}}}{}}{c{{Cd{c}}}{BlCfAbl}}{c{{Ch{c}}}{BlCfAbl}}{c{{Cj{c}}}{}}{{{f{b{Cd{c}}}}{f{b{Cd{c}}}}{f{b{Cd{c}}}}}Bd{BlCfAbl}}{{{f{b{Ch{c}}}}{f{b{Ch{c}}}}{f{b{Ch{c}}}}}Bd{BlCfAbl}}{{{f{b{Cj{c}}}}{f{b{Cj{c}}}}{f{b{Cj{c}}}}}Bd{{Cb{}{{An{}}}}{Cl{}{{An{}}}}Abl}}{{{f{b{Cn{eg}}}}{f{b{Cn{eg}}}}{f{b{Cn{eg}}}}}Bd{}{{j{c}}}{{j{c}}}}{fc{}}000000{c{{Bf{e}}}{}{}}000000{{}{{Bf{c}}}{}}000000{fBh}000000``````","D":"Cf","p":[[0,"mut"],[5,"Segtree",4],[1,"reference"],[1,"usize"],[10,"SegtreeItem",4],[10,"Clone",166],[5,"String",167],[10,"Debug",168],[10,"Default",169],[17,"Item"],[10,"Iterator",170],[10,"ExactSizeIterator",171],[1,"slice"],[6,"Option",172],[17,"Output"],[1,"bool"],[10,"Fn",173],[1,"unit"],[6,"Result",174],[5,"TypeId",175],[5,"Min",27],[10,"PartialOrd",176],[5,"Max",27],[5,"Sum",27],[10,"Add",177],[5,"MinAdd",27],[10,"AddAssign",177],[5,"MaxAdd",27],[5,"SumAdd",27],[10,"Mul",177],[5,"Combinator",27],[10,"MinMax",178],[5,"Formatter",168],[8,"Result",168],[1,"never"],[10,"Copy",179],[10,"From",180]],"r":[[0,4],[1,4]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIsACwABAAIABQAFAAwAAQARAAoAIwAyAFgAAgBcAAAAXgAAAGAAAABiAAEAbAA6AA=="}],["rlib_show",{"t":"JKKFNNONONOOONQOOONMQQNNQQQNNN","n":["SHOW_SETTINGS","Show","ShowPretty","ShowSettings","borrow","borrow_mut","colors","default","float_precision","from","inf_128","inf_32","inf_64","into","is_show","item_width","mint_max","mint_rational","new","show","","show_cfg","show_pretty","","","show_struct","show_struct_debug","try_from","try_into","type_id"],"q":[[0,"rlib_show"],[30,"rlib_show::traits"],[31,"alloc::string"],[32,"core::result"],[33,"core::any"]],"i":"````f000000000`0000h``l0```222","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}`{{}f}`{cc{}}```{{}c{}}````2{{{b{h}}{b{f}}}j}``{{{b{l}}{b{f}}}j}0```{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}","D":"f","p":[[1,"reference"],[0,"mut"],[5,"ShowSettings",0,30],[10,"Show",0,30],[5,"String",31],[10,"ShowPretty",0,30],[6,"Result",32],[5,"TypeId",33]],"r":[[0,30],[1,30],[2,30],[3,30]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsAAwABAAgACwACAA8ADwA="}],["rlib_sieve",{"t":"FFNNNNNNNNNNNNNNNNNNNNN","n":["PrimeIter","Sieve","borrow","","borrow_mut","","factorize","from","","into","","into_iter","is_prime","min_prime","new","next","primes","try_from","","try_into","","type_id",""],"q":[[0,"rlib_sieve"],[23,"core::option"],[24,"alloc::vec"],[25,"core::result"],[26,"core::any"]],"i":"``jf1001010100010101010","f":"``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}h}j}{cc{}}0{{}c{}}00{{{b{f}}h}l}{{{b{f}}h}h}{nf}{{{b{dj}}}{{A`{c}}}{}}{{{b{f}}}{{b{{Ab{h}}}}}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0","D":"h","p":[[1,"reference"],[0,"mut"],[5,"Sieve",0],[1,"i32"],[5,"PrimeIter",0],[1,"bool"],[1,"usize"],[6,"Option",23],[5,"Vec",24],[6,"Result",25],[5,"TypeId",26]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMAAgAAAAcADAALAA=="}],["rlib_tensor",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Tensor","borrow","borrow_mut","clone","clone_into","clone_to_uninit","dim","dims","eq","fmt","from","from_slice","from_vec","get_index","index","index_mut","into","into_iter","iter","iter_mut","new","read","to_owned","try_from","try_into","type_id","write"],"q":[[0,"rlib_tensor"],[27,"core::clone"],[28,"core::cmp"],[29,"core::fmt"],[30,"alloc::vec"],[31,"core::slice::iter"],[32,"rlib_io::reader"],[33,"core::result"],[34,"core::any"],[35,"rlib_io::writer"]],"i":"`f0000000000000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{f{c}}}h}{{b{b{dc}}}j{}}{bj}{{{b{{f{c}}}}l}l{}}{{{b{{f{c}}}}}{{b{{n{l}}}}}{}}{{{b{{f{c}}}}{b{{f{c}}}}}A`Ab}{{{b{{f{c}}}}{b{dAd}}}AfAh}{cc{}}{{{n{l}}{b{{Aj{c}}}}}{{f{c}}}h}{{{n{l}}{Al{c}}}{{f{c}}}{}}{{{b{{f{c}}}}{n{l}}}l{}}{{{b{{f{c}}}}{n{l}}}{{b{e}}}{}{}}{{{b{d{f{c}}}}{n{l}}}{{b{de}}}{}{}}{{}c{}}{{{f{c}}}e{}{}}{{{b{{f{c}}}}}{{An{c}}}{}}{{{b{d{f{c}}}}}{{B`{c}}}{}}{{{n{l}}c}{{f{c}}}h}{{{n{l}}{b{dBb}}}{{f{c}}}Bd}{bc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{bBh}{{{b{{f{c}}}}{b{dBj}}}jBl}","D":"d","p":[[1,"reference"],[0,"mut"],[5,"Tensor",0],[10,"Clone",27],[1,"unit"],[1,"usize"],[1,"array"],[1,"bool"],[10,"PartialEq",28],[5,"Formatter",29],[8,"Result",29],[10,"Debug",29],[1,"slice"],[5,"Vec",30],[5,"Iter",31],[5,"IterMut",31],[5,"Reader",32],[10,"Readable",32],[6,"Result",33],[5,"TypeId",34],[5,"Writer",35],[10,"Writable",35]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkAAwAAAAoADAAEABIACQA="}],["rlib_treap",{"t":"FKKFFNNNNNNNNNNNNNNNNNNNNNNONONNNNNONNNNONONMNNNNNNNNNNNNNNNNN","n":["Treap","TreapItem","TreapItemSized","TreapNode","TreePrinter","borrow","","","borrow_mut","","","collect","collect_into","default","first","fmt","","","from","","","from_item","insert_at","into","","","is_empty","item","last","left","merge","","new","","","priority","push","","","remove_at","right","root","","root_mut","size","","split_at","","split_by","","try_from","","","try_into","","","type_id","","","update","",""],"q":[[0,"rlib_treap"],[62,"rlib_treap::treap"],[63,"alloc::vec"],[64,"rlib_treap::treap_node"],[65,"core::default"],[66,"core::option"],[67,"rlib_treap::print"],[68,"core::fmt"],[69,"alloc::boxed"],[70,"core::ops::function"],[71,"core::result"],[72,"core::any"]],"i":"`````Adlf2100100210210002100101102101j0212111An23232432432432113","f":"`````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{d{f{c}}}}}{{h{{b{c}}}}}j}{{{b{d{l{c}}}}{b{d{h{{b{c}}}}}}}nj}{{}{{f{c}}}A`}{{{b{d{f{c}}}}}{{Ab{{b{c}}}}}j}{{{b{{Ad{c}}}}{b{dAf}}}Ah{jAj}}{{{b{{l{c}}}}{b{dAf}}}Ah{jAj}}{{{b{{f{c}}}}{b{dAf}}}Ah{jAj}}{cc{}}00{c{{f{c}}}j}{{{b{d{f{c}}}}Alc}n{jAn}}{{}c{}}00{{{b{{f{c}}}}}B`j}`8`{{{Ab{{Bb{{l{c}}}}}}{Ab{{Bb{{l{c}}}}}}}{{Ab{{Bb{{l{c}}}}}}}j}{{{f{c}}{f{c}}}{{f{c}}}j}{{{b{{f{c}}}}}{{Ad{c}}}{jAj}}{c{{l{c}}}{}}{{}{{f{c}}}j}`{{{b{dj}}{Ab{{b{dj}}}}{Ab{{b{dj}}}}}n}0{{{b{d{l{c}}}}}nj}{{{b{d{f{c}}}}Al}c{jAn}}`{{{b{{f{c}}}}}{{Ab{{b{c}}}}}j}`{{{b{d{f{c}}}}}{{Ab{{b{dc}}}}}j}{{{b{An}}}Al}{{{b{{f{c}}}}}Al{jAn}}{{{Ab{{Bb{{l{c}}}}}}Al}{{Bd{{Ab{{Bb{{l{c}}}}}}{Ab{{Bb{{l{c}}}}}}}}}{jAn}}{{{f{c}}Al}{{Bd{{f{c}}{f{c}}}}}{jAn}}{{{Ab{{Bb{{l{c}}}}}}e}{{Bd{{Ab{{Bb{{l{c}}}}}}{Ab{{Bb{{l{c}}}}}}}}}j{{Bh{{b{c}}}{{Bf{B`}}}}}}{{{f{c}}e}{{Bd{{f{c}}{f{c}}}}}j{{Bh{{b{c}}}{{Bf{B`}}}}}}{c{{Bj{e}}}{}{}}00{{}{{Bj{c}}}{}}00{bBl}00{{{b{dj}}{Ab{{b{j}}}}{Ab{{b{j}}}}}n}0=","D":"l","p":[[1,"reference"],[0,"mut"],[5,"Treap",0,62],[5,"Vec",63],[10,"TreapItem",0,64],[5,"TreapNode",0,64],[1,"unit"],[10,"Default",65],[6,"Option",66],[5,"TreePrinter",0,67],[5,"Formatter",68],[8,"Result",68],[10,"Debug",68],[1,"usize"],[10,"TreapItemSized",0,64],[1,"bool"],[5,"Box",69],[1,"tuple"],[17,"Output"],[10,"FnMut",70],[6,"Result",71],[5,"TypeId",72]],"r":[[0,62],[1,64],[2,64],[3,64],[4,67]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADgAAwAAABIAFgABABsAIwA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[1544,731,1228,2535,320,3494,1473,772,232,1300,676,1024,2696,4838,914,779,1509,2312]}